version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: privacy_jenga
      POSTGRES_USER: privacy_user
      POSTGRES_PASSWORD: privacy_pass_dev_only
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U privacy_user -d privacy_jenga"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Privacy Jenga Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://privacy_user:privacy_pass_dev_only@postgres:5432/privacy_jenga
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-secret-change-in-production
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server/src:/app/src
      - ./server/logs:/app/logs
    restart: unless-stopped

  # Privacy Jenga Client (Development)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      VITE_API_URL: http://localhost:3001/api
      VITE_SOCKET_URL: http://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
    depends_on:
      - server
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
